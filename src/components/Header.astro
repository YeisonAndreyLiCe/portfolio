---
import ThemeToggle from "components/ThemeToggle.astro";
import Icon from "components/Icon.astro";

const { BASE_URL } = import.meta.env;

interface Props {
  titles: string[];
}

const { titles } = Astro.props;
---

<header>
  <nav class="menu-hidden sidebar" id="navbar">
    <button id="hide-menu">
      <Icon icon="x" size="35px" />
    </button>
    <ul>
      <li id="logo"><a href={BASE_URL}>YALC</a></li>
      {
        titles.map((title) => (
          <li>
            <a
              href={`${BASE_URL}${title.toLocaleLowerCase().replace(/\s/g, "-")}/`}
            >
              {title}
            </a>
          </li>
        ))
      }
    </ul>
    <ThemeToggle />
  </nav>
  <button id="show-menu">
    <Icon icon="list" size="35px" />
  </button>
</header>
<script>
  // collapse and expand the menu on mobile
  const wrapperFN1 = () => {
    const navbarElement = document.getElementById("navbar");
    if (navbarElement !== null) {
      const observer = new MutationObserver(() => {
        const toggle = document.getElementById("theme-toggle");
        if (toggle) {
          toggle.addEventListener("click", window.theme.toggle);
        }
      });
      observer.observe(navbarElement, {
        attributes: true,
        attributeFilter: ["class"],
      });

      const showMenu = document.getElementById("show-menu");
      const items = navbarElement.innerHTML;

      showMenu?.addEventListener("click", () => {
        navbarElement.classList.remove("menu-hidden");
        navbarElement.innerHTML = items;
        const hideMenu = document.getElementById("hide-menu");
        hideMenu?.addEventListener("click", () => {
          navbarElement.classList.add("menu-hidden");
          navbarElement.innerHTML = "";
        });
      });
    }
  };
  wrapperFN1();
</script>

<style>
  header {
    display: flex;
    background-color: var(--primary);
    justify-content: end;
    padding-top: 16px;
    padding-bottom: 16px;
    z-index: 1000;
    width: 100%;
  }

  button {
    background-color: var(--primary);
    color: var(--text-color);
    margin-right: 20px;
    padding: 4px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  #hide-menu {
    position: absolute;
    right: 20px;
    top: 20px;
  }

  .menu-hidden {
    visibility: hidden;
  }

  nav {
    width: 150px;
    position: absolute;
    right: 2px;
    gap: 20px;
    padding-bottom: 20px;
  }

  nav ul {
    display: flex;
    flex-direction: column;
    justify-content: end;
    list-style-type: none;
    width: 100%;
    gap: 20px;
  }

  .sidebar {
    position: fixed;
    backdrop-filter: blur(10px);
    background-color: var(--primary);
    opacity: 0.95;
    top: 0;
    right: 0;
    height: 100vh;
    width: 250px;
    z-index: 999;
    box-shadow: -10px 0px 10px rgba(0, 0, 0, 0.1);
  }

  .showClose {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1000;
  }

  nav ul li {
    padding: 20px;
  }

  nav ul li a {
    color: var(--text-color);
    text-decoration: none;
  }

  nav ul li:hover {
    background-color: var(--contrast);
    color: var(--primary);
  }

  nav ul li a:hover {
    color: var(--primary);
  }

  @media screen and (min-width: 900px) {
    .sidebar {
      position: relative;
      height: auto;
      justify-content: space-between;
      width: 100%;
      box-shadow: unset;
    }
    button {
      display: none;
      pointer-events: none;
    }

    header {
      display: flex;
      padding-left: 60px;
      padding-right: 60px;
      align-items: center;
      justify-content: center;
    }

    nav {
      max-width: 1000px;
      padding: unset;
      position: relative;
      top: unset;
      background-color: unset;
      display: flex;
    }
    .menu-hidden {
      visibility: visible;
    }

    nav ul {
      flex-direction: row;
      flex: 1;
      justify-content: space-around;
    }

    nav ul li {
      padding: unset;
    }

    nav ul li:hover {
      background-color: unset;
    }

    nav ul li a:hover {
      text-decoration: underline;
      color: var(--contrast);
    }
  }
</style>
